** Week 3 - 06/10/17

*** Look at edit distance based metric
- weighted edited so that adding/removing weight from an edge counts as an edit in the distance metric
- Removing nodes/edges also counts to edit distance
- https://link.springer.com/content/pdf/10.1007%2Fs10044-008-0141-y.pdf

*** Transform graph to metric space
- Gromovâ€“Hausdorff
- Similar graphs give similar values
- Each node with edges it is connected to and their weights

*** Lobster graph as undirected tree
- Undirected tree is a tree where root is not known
- An undirected graph with no cycles is an undirected tree
- An find less computationally complex algorithm for undirected tree distance rather than graph distance

*** GUI tool to draw graphs and export to .dot files
- d3.js 
- networkx

*** Human pose graph matching papers
- Good ideas that have been tried or bad ones to avoid
- 

** Week 4

*** Create graphs from lobsters to try matching
- Have some sample graphs to be able to run through nauty and try the matching
- augment hand made graphs by adding mistakes (wrong labels or vertices)
- try to match mistake graphs with correct ones
- generate the mistake graphs and try to match them all to see which of the generated ones may match at all

*** software 
- graphgrep
- nauty
- see how fast it will take to match

*** From list of vertices
-> generate possible configurations
-> match with database annotated graphs
-> best matching ones go to 2nd step of matching (i.e, decision tree)

*** From this look into training decision tree

*** Start form subgraphs
- Instead of creating entire lobsters initially
- start with smaller subgraphs and match those 
- create the larger graph from subgraphs that are already matched and labelled
- more reliable to detect subgraph rather than entire lobster at once
